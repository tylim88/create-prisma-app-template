PRISMA_ENDPOINT=http://localhost:4466
PRISMA_DATAMODEL=datamodel-dev.graphql 
# for test and prod it should be datamodel-test.graphql and datamodel-prod.graphql
PRISMA_SECRET=password123
PRISMA_SCHEMA=src/devSchema/prisma.graphql 
# for test and prod it should be dist/testSchema/prisma.graphql and dist/prodSchema/prisma.graphql
CLIENT_SCHEMA=src/devSchema/client.graphql 
# for test and prod it should be dist/testSchema/client.graphql and dist/prodSchema/client.graphql
OUTPUT_FOLDER=../src/devSchema 
# for test and prod it should be ../src/testSchema and ../src/prodSchema
JWT_SECRET=thisisasecret
NODE_PORT=4000
NODE_ENDPOINT=http://localhost:4000 
# prod and jest doesnt need NODE_ENDPOINT, this just open the end point in brower after setup, nothing special

# start from here is docker variables
PRISMA_PORT=4466
PSQL_HOST=host.docker.internal 
# for local psql, window please use host.docker.internal, it return the docker host ip
# for local psql, mac please use docker.for.mac.localhost
PSQL_PORT=5433 
# use non default port to prevent port conflict
PSQL_DATABASE=mydb
PSQL_USER=tylim
PSQL_PASSWORD=1234567890
PSQL_SSL=false
COMMAND= 
# for test and prod it should be npm run test-start and npm run prod-start
# dev dont need command because dev doenst need node in docker compose
# do not put sensitive information here, dev.env is environment that can locally and also serve as example.env on github
DOCKER_VOLUME=postgres_dev